Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> value
Rule 1     value -> TRUE
Rule 2     value -> FALSE
Rule 3     value -> NUM
Rule 4     value -> STR
Rule 5     value -> NULL
Rule 6     value -> BINDINGS
Rule 7     value -> obj0 RIGHT_BRACE
Rule 8     value -> obj1 RIGHT_BRACE
Rule 9     value -> array0 RIGHT_BRACK
Rule 10    value -> array1 RIGHT_BRACK
Rule 11    value -> cons0 RIGHT_PAR
Rule 12    value -> cons1 RIGHT_PAR
Rule 13    obj0 -> LEFT_BRACE
Rule 14    obj0 -> BINDINGS EQUALS LEFT_BRACE
Rule 15    obj1 -> obj0 ID COLON value
Rule 16    obj1 -> obj0 STR COLON value
Rule 17    obj1 -> obj1 COMMA ID COLON value
Rule 18    obj1 -> obj1 COMMA STR COLON value
Rule 19    array0 -> LEFT_BRACK
Rule 20    array0 -> BINDINGS EQUALS LEFT_BRACK
Rule 21    array1 -> array1 COMMA value
Rule 22    array1 -> array0 value
Rule 23    cons0 -> BINDINGS EQUALS ID LEFT_PAR
Rule 24    cons0 -> ID LEFT_PAR
Rule 25    cons0 -> BINDINGS EQUALS STR LEFT_PAR
Rule 26    cons0 -> STR LEFT_PAR
Rule 27    cons1 -> cons1 COMMA value
Rule 28    cons1 -> cons0 value

Terminals, with rules where they appear

BINDINGS             : 6 14 20 23 25
COLON                : 15 16 17 18
COMMA                : 17 18 21 27
EQUALS               : 14 20 23 25
FALSE                : 2
ID                   : 15 17 23 24
LEFT_BRACE           : 13 14
LEFT_BRACK           : 19 20
LEFT_PAR             : 23 24 25 26
NULL                 : 5
NUM                  : 3
RIGHT_BRACE          : 7 8
RIGHT_BRACK          : 9 10
RIGHT_PAR            : 11 12
STR                  : 4 16 18 25 26
TRUE                 : 1
error                : 

Nonterminals, with rules where they appear

array0               : 9 22
array1               : 10 21
cons0                : 11 28
cons1                : 12 27
obj0                 : 7 15 16
obj1                 : 8 17 18
value                : 15 16 17 18 21 22 27 28 0

Parsing method: LALR

state 0

    (0) S' -> . value
    (1) value -> . TRUE
    (2) value -> . FALSE
    (3) value -> . NUM
    (4) value -> . STR
    (5) value -> . NULL
    (6) value -> . BINDINGS
    (7) value -> . obj0 RIGHT_BRACE
    (8) value -> . obj1 RIGHT_BRACE
    (9) value -> . array0 RIGHT_BRACK
    (10) value -> . array1 RIGHT_BRACK
    (11) value -> . cons0 RIGHT_PAR
    (12) value -> . cons1 RIGHT_PAR
    (13) obj0 -> . LEFT_BRACE
    (14) obj0 -> . BINDINGS EQUALS LEFT_BRACE
    (15) obj1 -> . obj0 ID COLON value
    (16) obj1 -> . obj0 STR COLON value
    (17) obj1 -> . obj1 COMMA ID COLON value
    (18) obj1 -> . obj1 COMMA STR COLON value
    (19) array0 -> . LEFT_BRACK
    (20) array0 -> . BINDINGS EQUALS LEFT_BRACK
    (21) array1 -> . array1 COMMA value
    (22) array1 -> . array0 value
    (23) cons0 -> . BINDINGS EQUALS ID LEFT_PAR
    (24) cons0 -> . ID LEFT_PAR
    (25) cons0 -> . BINDINGS EQUALS STR LEFT_PAR
    (26) cons0 -> . STR LEFT_PAR
    (27) cons1 -> . cons1 COMMA value
    (28) cons1 -> . cons0 value

    TRUE            shift and go to state 4
    FALSE           shift and go to state 15
    NUM             shift and go to state 8
    STR             shift and go to state 11
    NULL            shift and go to state 5
    BINDINGS        shift and go to state 2
    LEFT_BRACE      shift and go to state 1
    LEFT_BRACK      shift and go to state 3
    ID              shift and go to state 12

    obj1                           shift and go to state 9
    obj0                           shift and go to state 10
    cons1                          shift and go to state 14
    cons0                          shift and go to state 13
    array1                         shift and go to state 6
    array0                         shift and go to state 7
    value                          shift and go to state 16

state 1

    (13) obj0 -> LEFT_BRACE .

    RIGHT_BRACE     reduce using rule 13 (obj0 -> LEFT_BRACE .)
    ID              reduce using rule 13 (obj0 -> LEFT_BRACE .)
    STR             reduce using rule 13 (obj0 -> LEFT_BRACE .)


state 2

    (6) value -> BINDINGS .
    (14) obj0 -> BINDINGS . EQUALS LEFT_BRACE
    (20) array0 -> BINDINGS . EQUALS LEFT_BRACK
    (23) cons0 -> BINDINGS . EQUALS ID LEFT_PAR
    (25) cons0 -> BINDINGS . EQUALS STR LEFT_PAR

    RIGHT_PAR       reduce using rule 6 (value -> BINDINGS .)
    COMMA           reduce using rule 6 (value -> BINDINGS .)
    RIGHT_BRACK     reduce using rule 6 (value -> BINDINGS .)
    RIGHT_BRACE     reduce using rule 6 (value -> BINDINGS .)
    $end            reduce using rule 6 (value -> BINDINGS .)
    EQUALS          shift and go to state 17


state 3

    (19) array0 -> LEFT_BRACK .

    RIGHT_BRACK     reduce using rule 19 (array0 -> LEFT_BRACK .)
    TRUE            reduce using rule 19 (array0 -> LEFT_BRACK .)
    FALSE           reduce using rule 19 (array0 -> LEFT_BRACK .)
    NUM             reduce using rule 19 (array0 -> LEFT_BRACK .)
    STR             reduce using rule 19 (array0 -> LEFT_BRACK .)
    NULL            reduce using rule 19 (array0 -> LEFT_BRACK .)
    BINDINGS        reduce using rule 19 (array0 -> LEFT_BRACK .)
    LEFT_BRACE      reduce using rule 19 (array0 -> LEFT_BRACK .)
    LEFT_BRACK      reduce using rule 19 (array0 -> LEFT_BRACK .)
    ID              reduce using rule 19 (array0 -> LEFT_BRACK .)


state 4

    (1) value -> TRUE .

    RIGHT_PAR       reduce using rule 1 (value -> TRUE .)
    COMMA           reduce using rule 1 (value -> TRUE .)
    RIGHT_BRACK     reduce using rule 1 (value -> TRUE .)
    RIGHT_BRACE     reduce using rule 1 (value -> TRUE .)
    $end            reduce using rule 1 (value -> TRUE .)


state 5

    (5) value -> NULL .

    RIGHT_PAR       reduce using rule 5 (value -> NULL .)
    COMMA           reduce using rule 5 (value -> NULL .)
    RIGHT_BRACK     reduce using rule 5 (value -> NULL .)
    RIGHT_BRACE     reduce using rule 5 (value -> NULL .)
    $end            reduce using rule 5 (value -> NULL .)


state 6

    (10) value -> array1 . RIGHT_BRACK
    (21) array1 -> array1 . COMMA value

    RIGHT_BRACK     shift and go to state 18
    COMMA           shift and go to state 19


state 7

    (9) value -> array0 . RIGHT_BRACK
    (22) array1 -> array0 . value
    (1) value -> . TRUE
    (2) value -> . FALSE
    (3) value -> . NUM
    (4) value -> . STR
    (5) value -> . NULL
    (6) value -> . BINDINGS
    (7) value -> . obj0 RIGHT_BRACE
    (8) value -> . obj1 RIGHT_BRACE
    (9) value -> . array0 RIGHT_BRACK
    (10) value -> . array1 RIGHT_BRACK
    (11) value -> . cons0 RIGHT_PAR
    (12) value -> . cons1 RIGHT_PAR
    (13) obj0 -> . LEFT_BRACE
    (14) obj0 -> . BINDINGS EQUALS LEFT_BRACE
    (15) obj1 -> . obj0 ID COLON value
    (16) obj1 -> . obj0 STR COLON value
    (17) obj1 -> . obj1 COMMA ID COLON value
    (18) obj1 -> . obj1 COMMA STR COLON value
    (19) array0 -> . LEFT_BRACK
    (20) array0 -> . BINDINGS EQUALS LEFT_BRACK
    (21) array1 -> . array1 COMMA value
    (22) array1 -> . array0 value
    (23) cons0 -> . BINDINGS EQUALS ID LEFT_PAR
    (24) cons0 -> . ID LEFT_PAR
    (25) cons0 -> . BINDINGS EQUALS STR LEFT_PAR
    (26) cons0 -> . STR LEFT_PAR
    (27) cons1 -> . cons1 COMMA value
    (28) cons1 -> . cons0 value

    RIGHT_BRACK     shift and go to state 20
    TRUE            shift and go to state 4
    FALSE           shift and go to state 15
    NUM             shift and go to state 8
    STR             shift and go to state 11
    NULL            shift and go to state 5
    BINDINGS        shift and go to state 2
    LEFT_BRACE      shift and go to state 1
    LEFT_BRACK      shift and go to state 3
    ID              shift and go to state 12

    obj1                           shift and go to state 9
    obj0                           shift and go to state 10
    cons1                          shift and go to state 14
    cons0                          shift and go to state 13
    array1                         shift and go to state 6
    array0                         shift and go to state 7
    value                          shift and go to state 21

state 8

    (3) value -> NUM .

    RIGHT_PAR       reduce using rule 3 (value -> NUM .)
    COMMA           reduce using rule 3 (value -> NUM .)
    RIGHT_BRACK     reduce using rule 3 (value -> NUM .)
    RIGHT_BRACE     reduce using rule 3 (value -> NUM .)
    $end            reduce using rule 3 (value -> NUM .)


state 9

    (8) value -> obj1 . RIGHT_BRACE
    (17) obj1 -> obj1 . COMMA ID COLON value
    (18) obj1 -> obj1 . COMMA STR COLON value

    RIGHT_BRACE     shift and go to state 22
    COMMA           shift and go to state 23


state 10

    (7) value -> obj0 . RIGHT_BRACE
    (15) obj1 -> obj0 . ID COLON value
    (16) obj1 -> obj0 . STR COLON value

    RIGHT_BRACE     shift and go to state 24
    ID              shift and go to state 26
    STR             shift and go to state 25


state 11

    (4) value -> STR .
    (26) cons0 -> STR . LEFT_PAR

    RIGHT_PAR       reduce using rule 4 (value -> STR .)
    COMMA           reduce using rule 4 (value -> STR .)
    RIGHT_BRACK     reduce using rule 4 (value -> STR .)
    RIGHT_BRACE     reduce using rule 4 (value -> STR .)
    $end            reduce using rule 4 (value -> STR .)
    LEFT_PAR        shift and go to state 27


state 12

    (24) cons0 -> ID . LEFT_PAR

    LEFT_PAR        shift and go to state 28


state 13

    (11) value -> cons0 . RIGHT_PAR
    (28) cons1 -> cons0 . value
    (1) value -> . TRUE
    (2) value -> . FALSE
    (3) value -> . NUM
    (4) value -> . STR
    (5) value -> . NULL
    (6) value -> . BINDINGS
    (7) value -> . obj0 RIGHT_BRACE
    (8) value -> . obj1 RIGHT_BRACE
    (9) value -> . array0 RIGHT_BRACK
    (10) value -> . array1 RIGHT_BRACK
    (11) value -> . cons0 RIGHT_PAR
    (12) value -> . cons1 RIGHT_PAR
    (13) obj0 -> . LEFT_BRACE
    (14) obj0 -> . BINDINGS EQUALS LEFT_BRACE
    (15) obj1 -> . obj0 ID COLON value
    (16) obj1 -> . obj0 STR COLON value
    (17) obj1 -> . obj1 COMMA ID COLON value
    (18) obj1 -> . obj1 COMMA STR COLON value
    (19) array0 -> . LEFT_BRACK
    (20) array0 -> . BINDINGS EQUALS LEFT_BRACK
    (21) array1 -> . array1 COMMA value
    (22) array1 -> . array0 value
    (23) cons0 -> . BINDINGS EQUALS ID LEFT_PAR
    (24) cons0 -> . ID LEFT_PAR
    (25) cons0 -> . BINDINGS EQUALS STR LEFT_PAR
    (26) cons0 -> . STR LEFT_PAR
    (27) cons1 -> . cons1 COMMA value
    (28) cons1 -> . cons0 value

    RIGHT_PAR       shift and go to state 29
    TRUE            shift and go to state 4
    FALSE           shift and go to state 15
    NUM             shift and go to state 8
    STR             shift and go to state 11
    NULL            shift and go to state 5
    BINDINGS        shift and go to state 2
    LEFT_BRACE      shift and go to state 1
    LEFT_BRACK      shift and go to state 3
    ID              shift and go to state 12

    cons0                          shift and go to state 13
    obj0                           shift and go to state 10
    cons1                          shift and go to state 14
    obj1                           shift and go to state 9
    array1                         shift and go to state 6
    array0                         shift and go to state 7
    value                          shift and go to state 30

state 14

    (12) value -> cons1 . RIGHT_PAR
    (27) cons1 -> cons1 . COMMA value

    RIGHT_PAR       shift and go to state 32
    COMMA           shift and go to state 31


state 15

    (2) value -> FALSE .

    RIGHT_PAR       reduce using rule 2 (value -> FALSE .)
    COMMA           reduce using rule 2 (value -> FALSE .)
    RIGHT_BRACK     reduce using rule 2 (value -> FALSE .)
    RIGHT_BRACE     reduce using rule 2 (value -> FALSE .)
    $end            reduce using rule 2 (value -> FALSE .)


state 16

    (0) S' -> value .



state 17

    (14) obj0 -> BINDINGS EQUALS . LEFT_BRACE
    (20) array0 -> BINDINGS EQUALS . LEFT_BRACK
    (23) cons0 -> BINDINGS EQUALS . ID LEFT_PAR
    (25) cons0 -> BINDINGS EQUALS . STR LEFT_PAR

    LEFT_BRACE      shift and go to state 33
    LEFT_BRACK      shift and go to state 35
    ID              shift and go to state 36
    STR             shift and go to state 34


state 18

    (10) value -> array1 RIGHT_BRACK .

    RIGHT_PAR       reduce using rule 10 (value -> array1 RIGHT_BRACK .)
    COMMA           reduce using rule 10 (value -> array1 RIGHT_BRACK .)
    RIGHT_BRACK     reduce using rule 10 (value -> array1 RIGHT_BRACK .)
    RIGHT_BRACE     reduce using rule 10 (value -> array1 RIGHT_BRACK .)
    $end            reduce using rule 10 (value -> array1 RIGHT_BRACK .)


state 19

    (21) array1 -> array1 COMMA . value
    (1) value -> . TRUE
    (2) value -> . FALSE
    (3) value -> . NUM
    (4) value -> . STR
    (5) value -> . NULL
    (6) value -> . BINDINGS
    (7) value -> . obj0 RIGHT_BRACE
    (8) value -> . obj1 RIGHT_BRACE
    (9) value -> . array0 RIGHT_BRACK
    (10) value -> . array1 RIGHT_BRACK
    (11) value -> . cons0 RIGHT_PAR
    (12) value -> . cons1 RIGHT_PAR
    (13) obj0 -> . LEFT_BRACE
    (14) obj0 -> . BINDINGS EQUALS LEFT_BRACE
    (15) obj1 -> . obj0 ID COLON value
    (16) obj1 -> . obj0 STR COLON value
    (17) obj1 -> . obj1 COMMA ID COLON value
    (18) obj1 -> . obj1 COMMA STR COLON value
    (19) array0 -> . LEFT_BRACK
    (20) array0 -> . BINDINGS EQUALS LEFT_BRACK
    (21) array1 -> . array1 COMMA value
    (22) array1 -> . array0 value
    (23) cons0 -> . BINDINGS EQUALS ID LEFT_PAR
    (24) cons0 -> . ID LEFT_PAR
    (25) cons0 -> . BINDINGS EQUALS STR LEFT_PAR
    (26) cons0 -> . STR LEFT_PAR
    (27) cons1 -> . cons1 COMMA value
    (28) cons1 -> . cons0 value

    TRUE            shift and go to state 4
    FALSE           shift and go to state 15
    NUM             shift and go to state 8
    STR             shift and go to state 11
    NULL            shift and go to state 5
    BINDINGS        shift and go to state 2
    LEFT_BRACE      shift and go to state 1
    LEFT_BRACK      shift and go to state 3
    ID              shift and go to state 12

    obj1                           shift and go to state 9
    obj0                           shift and go to state 10
    cons1                          shift and go to state 14
    cons0                          shift and go to state 13
    array1                         shift and go to state 6
    array0                         shift and go to state 7
    value                          shift and go to state 37

state 20

    (9) value -> array0 RIGHT_BRACK .

    RIGHT_PAR       reduce using rule 9 (value -> array0 RIGHT_BRACK .)
    COMMA           reduce using rule 9 (value -> array0 RIGHT_BRACK .)
    RIGHT_BRACK     reduce using rule 9 (value -> array0 RIGHT_BRACK .)
    RIGHT_BRACE     reduce using rule 9 (value -> array0 RIGHT_BRACK .)
    $end            reduce using rule 9 (value -> array0 RIGHT_BRACK .)


state 21

    (22) array1 -> array0 value .

    RIGHT_BRACK     reduce using rule 22 (array1 -> array0 value .)
    COMMA           reduce using rule 22 (array1 -> array0 value .)


state 22

    (8) value -> obj1 RIGHT_BRACE .

    RIGHT_PAR       reduce using rule 8 (value -> obj1 RIGHT_BRACE .)
    COMMA           reduce using rule 8 (value -> obj1 RIGHT_BRACE .)
    RIGHT_BRACK     reduce using rule 8 (value -> obj1 RIGHT_BRACE .)
    RIGHT_BRACE     reduce using rule 8 (value -> obj1 RIGHT_BRACE .)
    $end            reduce using rule 8 (value -> obj1 RIGHT_BRACE .)


state 23

    (17) obj1 -> obj1 COMMA . ID COLON value
    (18) obj1 -> obj1 COMMA . STR COLON value

    ID              shift and go to state 39
    STR             shift and go to state 38


state 24

    (7) value -> obj0 RIGHT_BRACE .

    RIGHT_PAR       reduce using rule 7 (value -> obj0 RIGHT_BRACE .)
    COMMA           reduce using rule 7 (value -> obj0 RIGHT_BRACE .)
    RIGHT_BRACK     reduce using rule 7 (value -> obj0 RIGHT_BRACE .)
    RIGHT_BRACE     reduce using rule 7 (value -> obj0 RIGHT_BRACE .)
    $end            reduce using rule 7 (value -> obj0 RIGHT_BRACE .)


state 25

    (16) obj1 -> obj0 STR . COLON value

    COLON           shift and go to state 40


state 26

    (15) obj1 -> obj0 ID . COLON value

    COLON           shift and go to state 41


state 27

    (26) cons0 -> STR LEFT_PAR .

    RIGHT_PAR       reduce using rule 26 (cons0 -> STR LEFT_PAR .)
    TRUE            reduce using rule 26 (cons0 -> STR LEFT_PAR .)
    FALSE           reduce using rule 26 (cons0 -> STR LEFT_PAR .)
    NUM             reduce using rule 26 (cons0 -> STR LEFT_PAR .)
    STR             reduce using rule 26 (cons0 -> STR LEFT_PAR .)
    NULL            reduce using rule 26 (cons0 -> STR LEFT_PAR .)
    BINDINGS        reduce using rule 26 (cons0 -> STR LEFT_PAR .)
    LEFT_BRACE      reduce using rule 26 (cons0 -> STR LEFT_PAR .)
    LEFT_BRACK      reduce using rule 26 (cons0 -> STR LEFT_PAR .)
    ID              reduce using rule 26 (cons0 -> STR LEFT_PAR .)


state 28

    (24) cons0 -> ID LEFT_PAR .

    RIGHT_PAR       reduce using rule 24 (cons0 -> ID LEFT_PAR .)
    TRUE            reduce using rule 24 (cons0 -> ID LEFT_PAR .)
    FALSE           reduce using rule 24 (cons0 -> ID LEFT_PAR .)
    NUM             reduce using rule 24 (cons0 -> ID LEFT_PAR .)
    STR             reduce using rule 24 (cons0 -> ID LEFT_PAR .)
    NULL            reduce using rule 24 (cons0 -> ID LEFT_PAR .)
    BINDINGS        reduce using rule 24 (cons0 -> ID LEFT_PAR .)
    LEFT_BRACE      reduce using rule 24 (cons0 -> ID LEFT_PAR .)
    LEFT_BRACK      reduce using rule 24 (cons0 -> ID LEFT_PAR .)
    ID              reduce using rule 24 (cons0 -> ID LEFT_PAR .)


state 29

    (11) value -> cons0 RIGHT_PAR .

    RIGHT_PAR       reduce using rule 11 (value -> cons0 RIGHT_PAR .)
    COMMA           reduce using rule 11 (value -> cons0 RIGHT_PAR .)
    RIGHT_BRACK     reduce using rule 11 (value -> cons0 RIGHT_PAR .)
    RIGHT_BRACE     reduce using rule 11 (value -> cons0 RIGHT_PAR .)
    $end            reduce using rule 11 (value -> cons0 RIGHT_PAR .)


state 30

    (28) cons1 -> cons0 value .

    RIGHT_PAR       reduce using rule 28 (cons1 -> cons0 value .)
    COMMA           reduce using rule 28 (cons1 -> cons0 value .)


state 31

    (27) cons1 -> cons1 COMMA . value
    (1) value -> . TRUE
    (2) value -> . FALSE
    (3) value -> . NUM
    (4) value -> . STR
    (5) value -> . NULL
    (6) value -> . BINDINGS
    (7) value -> . obj0 RIGHT_BRACE
    (8) value -> . obj1 RIGHT_BRACE
    (9) value -> . array0 RIGHT_BRACK
    (10) value -> . array1 RIGHT_BRACK
    (11) value -> . cons0 RIGHT_PAR
    (12) value -> . cons1 RIGHT_PAR
    (13) obj0 -> . LEFT_BRACE
    (14) obj0 -> . BINDINGS EQUALS LEFT_BRACE
    (15) obj1 -> . obj0 ID COLON value
    (16) obj1 -> . obj0 STR COLON value
    (17) obj1 -> . obj1 COMMA ID COLON value
    (18) obj1 -> . obj1 COMMA STR COLON value
    (19) array0 -> . LEFT_BRACK
    (20) array0 -> . BINDINGS EQUALS LEFT_BRACK
    (21) array1 -> . array1 COMMA value
    (22) array1 -> . array0 value
    (23) cons0 -> . BINDINGS EQUALS ID LEFT_PAR
    (24) cons0 -> . ID LEFT_PAR
    (25) cons0 -> . BINDINGS EQUALS STR LEFT_PAR
    (26) cons0 -> . STR LEFT_PAR
    (27) cons1 -> . cons1 COMMA value
    (28) cons1 -> . cons0 value

    TRUE            shift and go to state 4
    FALSE           shift and go to state 15
    NUM             shift and go to state 8
    STR             shift and go to state 11
    NULL            shift and go to state 5
    BINDINGS        shift and go to state 2
    LEFT_BRACE      shift and go to state 1
    LEFT_BRACK      shift and go to state 3
    ID              shift and go to state 12

    obj1                           shift and go to state 9
    cons1                          shift and go to state 14
    obj0                           shift and go to state 10
    cons0                          shift and go to state 13
    array1                         shift and go to state 6
    array0                         shift and go to state 7
    value                          shift and go to state 42

state 32

    (12) value -> cons1 RIGHT_PAR .

    RIGHT_PAR       reduce using rule 12 (value -> cons1 RIGHT_PAR .)
    COMMA           reduce using rule 12 (value -> cons1 RIGHT_PAR .)
    RIGHT_BRACK     reduce using rule 12 (value -> cons1 RIGHT_PAR .)
    RIGHT_BRACE     reduce using rule 12 (value -> cons1 RIGHT_PAR .)
    $end            reduce using rule 12 (value -> cons1 RIGHT_PAR .)


state 33

    (14) obj0 -> BINDINGS EQUALS LEFT_BRACE .

    RIGHT_BRACE     reduce using rule 14 (obj0 -> BINDINGS EQUALS LEFT_BRACE .)
    ID              reduce using rule 14 (obj0 -> BINDINGS EQUALS LEFT_BRACE .)
    STR             reduce using rule 14 (obj0 -> BINDINGS EQUALS LEFT_BRACE .)


state 34

    (25) cons0 -> BINDINGS EQUALS STR . LEFT_PAR

    LEFT_PAR        shift and go to state 43


state 35

    (20) array0 -> BINDINGS EQUALS LEFT_BRACK .

    RIGHT_BRACK     reduce using rule 20 (array0 -> BINDINGS EQUALS LEFT_BRACK .)
    TRUE            reduce using rule 20 (array0 -> BINDINGS EQUALS LEFT_BRACK .)
    FALSE           reduce using rule 20 (array0 -> BINDINGS EQUALS LEFT_BRACK .)
    NUM             reduce using rule 20 (array0 -> BINDINGS EQUALS LEFT_BRACK .)
    STR             reduce using rule 20 (array0 -> BINDINGS EQUALS LEFT_BRACK .)
    NULL            reduce using rule 20 (array0 -> BINDINGS EQUALS LEFT_BRACK .)
    BINDINGS        reduce using rule 20 (array0 -> BINDINGS EQUALS LEFT_BRACK .)
    LEFT_BRACE      reduce using rule 20 (array0 -> BINDINGS EQUALS LEFT_BRACK .)
    LEFT_BRACK      reduce using rule 20 (array0 -> BINDINGS EQUALS LEFT_BRACK .)
    ID              reduce using rule 20 (array0 -> BINDINGS EQUALS LEFT_BRACK .)


state 36

    (23) cons0 -> BINDINGS EQUALS ID . LEFT_PAR

    LEFT_PAR        shift and go to state 44


state 37

    (21) array1 -> array1 COMMA value .

    RIGHT_BRACK     reduce using rule 21 (array1 -> array1 COMMA value .)
    COMMA           reduce using rule 21 (array1 -> array1 COMMA value .)


state 38

    (18) obj1 -> obj1 COMMA STR . COLON value

    COLON           shift and go to state 45


state 39

    (17) obj1 -> obj1 COMMA ID . COLON value

    COLON           shift and go to state 46


state 40

    (16) obj1 -> obj0 STR COLON . value
    (1) value -> . TRUE
    (2) value -> . FALSE
    (3) value -> . NUM
    (4) value -> . STR
    (5) value -> . NULL
    (6) value -> . BINDINGS
    (7) value -> . obj0 RIGHT_BRACE
    (8) value -> . obj1 RIGHT_BRACE
    (9) value -> . array0 RIGHT_BRACK
    (10) value -> . array1 RIGHT_BRACK
    (11) value -> . cons0 RIGHT_PAR
    (12) value -> . cons1 RIGHT_PAR
    (13) obj0 -> . LEFT_BRACE
    (14) obj0 -> . BINDINGS EQUALS LEFT_BRACE
    (15) obj1 -> . obj0 ID COLON value
    (16) obj1 -> . obj0 STR COLON value
    (17) obj1 -> . obj1 COMMA ID COLON value
    (18) obj1 -> . obj1 COMMA STR COLON value
    (19) array0 -> . LEFT_BRACK
    (20) array0 -> . BINDINGS EQUALS LEFT_BRACK
    (21) array1 -> . array1 COMMA value
    (22) array1 -> . array0 value
    (23) cons0 -> . BINDINGS EQUALS ID LEFT_PAR
    (24) cons0 -> . ID LEFT_PAR
    (25) cons0 -> . BINDINGS EQUALS STR LEFT_PAR
    (26) cons0 -> . STR LEFT_PAR
    (27) cons1 -> . cons1 COMMA value
    (28) cons1 -> . cons0 value

    TRUE            shift and go to state 4
    FALSE           shift and go to state 15
    NUM             shift and go to state 8
    STR             shift and go to state 11
    NULL            shift and go to state 5
    BINDINGS        shift and go to state 2
    LEFT_BRACE      shift and go to state 1
    LEFT_BRACK      shift and go to state 3
    ID              shift and go to state 12

    obj1                           shift and go to state 9
    obj0                           shift and go to state 10
    cons1                          shift and go to state 14
    cons0                          shift and go to state 13
    array1                         shift and go to state 6
    array0                         shift and go to state 7
    value                          shift and go to state 47

state 41

    (15) obj1 -> obj0 ID COLON . value
    (1) value -> . TRUE
    (2) value -> . FALSE
    (3) value -> . NUM
    (4) value -> . STR
    (5) value -> . NULL
    (6) value -> . BINDINGS
    (7) value -> . obj0 RIGHT_BRACE
    (8) value -> . obj1 RIGHT_BRACE
    (9) value -> . array0 RIGHT_BRACK
    (10) value -> . array1 RIGHT_BRACK
    (11) value -> . cons0 RIGHT_PAR
    (12) value -> . cons1 RIGHT_PAR
    (13) obj0 -> . LEFT_BRACE
    (14) obj0 -> . BINDINGS EQUALS LEFT_BRACE
    (15) obj1 -> . obj0 ID COLON value
    (16) obj1 -> . obj0 STR COLON value
    (17) obj1 -> . obj1 COMMA ID COLON value
    (18) obj1 -> . obj1 COMMA STR COLON value
    (19) array0 -> . LEFT_BRACK
    (20) array0 -> . BINDINGS EQUALS LEFT_BRACK
    (21) array1 -> . array1 COMMA value
    (22) array1 -> . array0 value
    (23) cons0 -> . BINDINGS EQUALS ID LEFT_PAR
    (24) cons0 -> . ID LEFT_PAR
    (25) cons0 -> . BINDINGS EQUALS STR LEFT_PAR
    (26) cons0 -> . STR LEFT_PAR
    (27) cons1 -> . cons1 COMMA value
    (28) cons1 -> . cons0 value

    TRUE            shift and go to state 4
    FALSE           shift and go to state 15
    NUM             shift and go to state 8
    STR             shift and go to state 11
    NULL            shift and go to state 5
    BINDINGS        shift and go to state 2
    LEFT_BRACE      shift and go to state 1
    LEFT_BRACK      shift and go to state 3
    ID              shift and go to state 12

    obj1                           shift and go to state 9
    obj0                           shift and go to state 10
    cons1                          shift and go to state 14
    cons0                          shift and go to state 13
    array1                         shift and go to state 6
    array0                         shift and go to state 7
    value                          shift and go to state 48

state 42

    (27) cons1 -> cons1 COMMA value .

    RIGHT_PAR       reduce using rule 27 (cons1 -> cons1 COMMA value .)
    COMMA           reduce using rule 27 (cons1 -> cons1 COMMA value .)


state 43

    (25) cons0 -> BINDINGS EQUALS STR LEFT_PAR .

    RIGHT_PAR       reduce using rule 25 (cons0 -> BINDINGS EQUALS STR LEFT_PAR .)
    TRUE            reduce using rule 25 (cons0 -> BINDINGS EQUALS STR LEFT_PAR .)
    FALSE           reduce using rule 25 (cons0 -> BINDINGS EQUALS STR LEFT_PAR .)
    NUM             reduce using rule 25 (cons0 -> BINDINGS EQUALS STR LEFT_PAR .)
    STR             reduce using rule 25 (cons0 -> BINDINGS EQUALS STR LEFT_PAR .)
    NULL            reduce using rule 25 (cons0 -> BINDINGS EQUALS STR LEFT_PAR .)
    BINDINGS        reduce using rule 25 (cons0 -> BINDINGS EQUALS STR LEFT_PAR .)
    LEFT_BRACE      reduce using rule 25 (cons0 -> BINDINGS EQUALS STR LEFT_PAR .)
    LEFT_BRACK      reduce using rule 25 (cons0 -> BINDINGS EQUALS STR LEFT_PAR .)
    ID              reduce using rule 25 (cons0 -> BINDINGS EQUALS STR LEFT_PAR .)


state 44

    (23) cons0 -> BINDINGS EQUALS ID LEFT_PAR .

    RIGHT_PAR       reduce using rule 23 (cons0 -> BINDINGS EQUALS ID LEFT_PAR .)
    TRUE            reduce using rule 23 (cons0 -> BINDINGS EQUALS ID LEFT_PAR .)
    FALSE           reduce using rule 23 (cons0 -> BINDINGS EQUALS ID LEFT_PAR .)
    NUM             reduce using rule 23 (cons0 -> BINDINGS EQUALS ID LEFT_PAR .)
    STR             reduce using rule 23 (cons0 -> BINDINGS EQUALS ID LEFT_PAR .)
    NULL            reduce using rule 23 (cons0 -> BINDINGS EQUALS ID LEFT_PAR .)
    BINDINGS        reduce using rule 23 (cons0 -> BINDINGS EQUALS ID LEFT_PAR .)
    LEFT_BRACE      reduce using rule 23 (cons0 -> BINDINGS EQUALS ID LEFT_PAR .)
    LEFT_BRACK      reduce using rule 23 (cons0 -> BINDINGS EQUALS ID LEFT_PAR .)
    ID              reduce using rule 23 (cons0 -> BINDINGS EQUALS ID LEFT_PAR .)


state 45

    (18) obj1 -> obj1 COMMA STR COLON . value
    (1) value -> . TRUE
    (2) value -> . FALSE
    (3) value -> . NUM
    (4) value -> . STR
    (5) value -> . NULL
    (6) value -> . BINDINGS
    (7) value -> . obj0 RIGHT_BRACE
    (8) value -> . obj1 RIGHT_BRACE
    (9) value -> . array0 RIGHT_BRACK
    (10) value -> . array1 RIGHT_BRACK
    (11) value -> . cons0 RIGHT_PAR
    (12) value -> . cons1 RIGHT_PAR
    (13) obj0 -> . LEFT_BRACE
    (14) obj0 -> . BINDINGS EQUALS LEFT_BRACE
    (15) obj1 -> . obj0 ID COLON value
    (16) obj1 -> . obj0 STR COLON value
    (17) obj1 -> . obj1 COMMA ID COLON value
    (18) obj1 -> . obj1 COMMA STR COLON value
    (19) array0 -> . LEFT_BRACK
    (20) array0 -> . BINDINGS EQUALS LEFT_BRACK
    (21) array1 -> . array1 COMMA value
    (22) array1 -> . array0 value
    (23) cons0 -> . BINDINGS EQUALS ID LEFT_PAR
    (24) cons0 -> . ID LEFT_PAR
    (25) cons0 -> . BINDINGS EQUALS STR LEFT_PAR
    (26) cons0 -> . STR LEFT_PAR
    (27) cons1 -> . cons1 COMMA value
    (28) cons1 -> . cons0 value

    TRUE            shift and go to state 4
    FALSE           shift and go to state 15
    NUM             shift and go to state 8
    STR             shift and go to state 11
    NULL            shift and go to state 5
    BINDINGS        shift and go to state 2
    LEFT_BRACE      shift and go to state 1
    LEFT_BRACK      shift and go to state 3
    ID              shift and go to state 12

    obj1                           shift and go to state 9
    obj0                           shift and go to state 10
    cons1                          shift and go to state 14
    cons0                          shift and go to state 13
    array1                         shift and go to state 6
    array0                         shift and go to state 7
    value                          shift and go to state 49

state 46

    (17) obj1 -> obj1 COMMA ID COLON . value
    (1) value -> . TRUE
    (2) value -> . FALSE
    (3) value -> . NUM
    (4) value -> . STR
    (5) value -> . NULL
    (6) value -> . BINDINGS
    (7) value -> . obj0 RIGHT_BRACE
    (8) value -> . obj1 RIGHT_BRACE
    (9) value -> . array0 RIGHT_BRACK
    (10) value -> . array1 RIGHT_BRACK
    (11) value -> . cons0 RIGHT_PAR
    (12) value -> . cons1 RIGHT_PAR
    (13) obj0 -> . LEFT_BRACE
    (14) obj0 -> . BINDINGS EQUALS LEFT_BRACE
    (15) obj1 -> . obj0 ID COLON value
    (16) obj1 -> . obj0 STR COLON value
    (17) obj1 -> . obj1 COMMA ID COLON value
    (18) obj1 -> . obj1 COMMA STR COLON value
    (19) array0 -> . LEFT_BRACK
    (20) array0 -> . BINDINGS EQUALS LEFT_BRACK
    (21) array1 -> . array1 COMMA value
    (22) array1 -> . array0 value
    (23) cons0 -> . BINDINGS EQUALS ID LEFT_PAR
    (24) cons0 -> . ID LEFT_PAR
    (25) cons0 -> . BINDINGS EQUALS STR LEFT_PAR
    (26) cons0 -> . STR LEFT_PAR
    (27) cons1 -> . cons1 COMMA value
    (28) cons1 -> . cons0 value

    TRUE            shift and go to state 4
    FALSE           shift and go to state 15
    NUM             shift and go to state 8
    STR             shift and go to state 11
    NULL            shift and go to state 5
    BINDINGS        shift and go to state 2
    LEFT_BRACE      shift and go to state 1
    LEFT_BRACK      shift and go to state 3
    ID              shift and go to state 12

    obj1                           shift and go to state 9
    obj0                           shift and go to state 10
    cons1                          shift and go to state 14
    cons0                          shift and go to state 13
    array1                         shift and go to state 6
    array0                         shift and go to state 7
    value                          shift and go to state 50

state 47

    (16) obj1 -> obj0 STR COLON value .

    RIGHT_BRACE     reduce using rule 16 (obj1 -> obj0 STR COLON value .)
    COMMA           reduce using rule 16 (obj1 -> obj0 STR COLON value .)


state 48

    (15) obj1 -> obj0 ID COLON value .

    RIGHT_BRACE     reduce using rule 15 (obj1 -> obj0 ID COLON value .)
    COMMA           reduce using rule 15 (obj1 -> obj0 ID COLON value .)


state 49

    (18) obj1 -> obj1 COMMA STR COLON value .

    RIGHT_BRACE     reduce using rule 18 (obj1 -> obj1 COMMA STR COLON value .)
    COMMA           reduce using rule 18 (obj1 -> obj1 COMMA STR COLON value .)


state 50

    (17) obj1 -> obj1 COMMA ID COLON value .

    RIGHT_BRACE     reduce using rule 17 (obj1 -> obj1 COMMA ID COLON value .)
    COMMA           reduce using rule 17 (obj1 -> obj1 COMMA ID COLON value .)

